name: Release
on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    name: release
    runs-on: ubuntu-18.04
    env:
      IMAGE_PREFIX: ${{ secrets.IMAGE_PREFIX }}
    steps:
      - name: Validate Release Version
        id: check_version
        run: |
          VERSION=$(echo $GITHUB_REF | sed -ne 's/[^0-9]*\([0-9]\+\.[0-9]\+\.[0-9]\+\(-.*\)\?\).*/\1/p')
          if [ "$VERSION" = "" ]; then
            # Invalid version format
            exit 1
          fi
          if [ $(echo $VERSION | grep "-") ]; then PRERELEASE=true; else PRERELEASE=false; fi
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=prerelease::${PRERELEASE}"
      - run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USER }} --password-stdin quay.io
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.13
      - run: make setup
      - run: make build TOPOLVM_VERSION=${{ steps.check_version.outputs.version }}
      - run: tar czf lvmd-${{ steps.check_version.outputs.version }}.tar.gz -C ./build lvmd
      - run: make image
      - run: make tag push IMAGE_TAG=${{ steps.check_version.outputs.version }}
      - name: Push branch tag
        if: ${{ steps.check_version.outputs.prerelease == 'false' }}
        run: |
          BRANCH=$(echo ${{ steps.check_version.outputs.version }} | cut -d "." -f 1-2)
          make tag push IMAGE_TAG=$BRANCH
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ steps.check_version.outputs.version  }}
          draft: true
          prerelease: ${{ steps.check_version.outputs.prerelease }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lvmd-${{ steps.check_version.outputs.version }}.tar.gz
          asset_name: lvmd-${{ steps.check_version.outputs.version }}.tar.gz
          asset_content_type: application/gzip
